package kr.ac.catholiccs.rshell.client;

import java.nio.charset.StandardCharsets;

import org.apache.mina.core.buffer.IoBuffer;
import org.apache.mina.core.future.WriteFuture;
import org.apache.mina.core.service.IoHandlerAdapter;
import org.apache.mina.core.session.IoSession;

public class MinaClientHandler extends IoHandlerAdapter {
    private IoSession session;
    private String response;
    private StringBuilder responseBuilder;

    public void setSession(IoSession session) {
        this.session = session;
    }

    public void sendMessage(String message) {
        // 서버에 메시지 전송
        if (session != null && session.isConnected()) {
            WriteFuture future = session.write(message.getBytes(StandardCharsets.UTF_8));
            future.awaitUninterruptibly();
            if (!future.isWritten()) {
                System.err.println("Failed to send message");
            }
        } else {
            System.err.println("Not connected to the server");
        }
    }

    public String  receiveMessage() {
        // 서버에서의 응답 수신
        // 서버에서의 메시지 처리 로직을 추가하면 됩니다.

        return responseBuilder.toString();
        
    }

    @Override
    public void messageReceived(IoSession session, Object message) {
        // 서버에서 메시지를 받았을 때의 동작 정의
        if (message instanceof IoBuffer) {
            IoBuffer ioBuffer = (IoBuffer) message;
            byte[] byteArray = new byte[ioBuffer.remaining()];
            ioBuffer.get(byteArray);
            String receivedMessage = new String(byteArray, StandardCharsets.UTF_8);
            
            // 수신된 메시지 처리
            responseBuilder.append(receivedMessage);

            // 이후 필요한 처리 수행
            // ...

        } else {
            // 다른 형식의 메시지 처리
        }
    }
    
    
    public String getResponse() {
        return response;
    }
}
